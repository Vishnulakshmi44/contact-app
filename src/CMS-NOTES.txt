

                 CONTACT MANAGEMENT system
           ---------------------------------------

    1.Create a new project - ng new contact-app  
    2.Run the new project - ng serve --open
    3.Clear the code in app.component.html
    4.Install 3rd party libraries- bootstrap,fontawesome,googlefonts  
      -> Install bootstrap- npm i bootstrap
      -> Configure bootstrap-

      In angular.json
             "styles": [
              "src/styles.css",
              "node_modules/bootstrap/dist/css/bootstrap.min.css"
            ],

             "scripts": [
              "node_modules/bootstrap/dist/js/bootstrap.bundle.js"
            ]

    In index.html -
               <!-- Bootstrap -->
              <!--  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
             <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
-->
        
        -> Install fontawesome
        npm install --save @fortawesome/fontawesome-free
        paste link to index.html -<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />


        -> Install Google Fonts
        select fonts save ..from import take link otherthan style tage and paste in style.css 
        @import url('https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Bree+Serif&family=Instrument+Serif:ital@0;1&family=Lobster&family=Lobster+Two&family=Oswald:wght@400;500&family=Shrikhand&display=swap');


    5. Create html pages or components
         >> Contact Manager - View all contacts - ng g c contactManager
         >> Add Contacts- Add new contacts- ng g c addContacts
         >> edit Contact -edit specific contact - ng g c editContact
         >> View Contact-view particular contact - ng g c viewContact


    6. Setup path for each component - Routing

            localhost:4200 -> localhost:4200/contactManager  

            Inside app-routing.module.ts file

        ................................
         In const routes: Routes = [
         add   {// localhost:4200 -> localhost:4200/contactManager
              path:'',redirectTo:'contactManager',pathMatch:'full'
            },
            {
              path:'contactManager',component:ContactManagerComponent
            }
          ];
   7. <router-outlet></router-outlet>
   page to view requested components


.......................................................................................................

          then while hovering the  component:ContactManagerComponent.....click on fix then itwill automatically fix the import 
      like this ..........    import { ContactManagerComponent } from './contact-manager/contact-manager.component';...............

        next path to add 
        // add new contact->  localhost:4200/contactManager/addcontact
  {
    path:'contactManager/addcontact',component:AddContactsComponent
  }  


  9- Design full page

10. API Integration

      To fetchdata and display 
       *create a server folder  inside src 
       *inside it, create db.json file*Goto jsonplaceholder * myjsondata - content 


create a packagec.jsonfile -npm init 
update package.json as*>
   in package .json ..replace 7 th line with
 "start" : json-server --watc db.json --port 3000"


 **** install npm  i json-server

 ****run backend - npm start

  

11.......Create a model folder in src
 **********inside in it create myContact.ts file and myGroup.ts file


 12... Asynchronous Resolving


  JS                            TS

  Promise                     Observable   [rxjs--library-reactive extension js]

  .then()                     .subscribe()  ----------they are call back function
  .catch()                    .catch()

    
Display All contact information API - get
View All contact information API - get
Update All contact information API - put
Delete All contact information API- delete



13... Create Services

Services - Pass data from one component to another component 
        If common different components share the same data then we use to create a service

   command ---     ng g s service-name --> ng g s services/api

14.  To get http methods for api fetching
      
            -Import HttpClientModule in app.module.ts

            -Import{HttpClientModule} from '@angular/common/http';

            -Import[
              HttpClientModule
            ]
................................................................................................................................................
15. Dependency Injection 

    Data share between two dependent classes 
    -It perform inside the constructor

    constructor -   
        *** It is a special member function
        *** It executes first in the class


        Syntax for DI -  Constructor(access-specifier variable-name : class-name){}

.............................................................................................................................................
16** ngOnInit
   --It is a lifecycle hook
   --Starting stage of a component creation


17      Data Binding - Data sharing inside a component (ts,html)

             1. One way data binding (ts > html or html > ts)

                i) Component to view (ts > html )
                    a) String Interpolation - {{Variable-name}} {inside in html}
                    b) Property binding - [attribute-name] = "property-name"

                ii) View to component (html to vs)


                    a)Event binding -(event-name)="function-name"


                    EVENTS 

                              events are "things" that happen to HTML elements
                             An HTML event can be something the browser does, or something a user does.

..........................     Here are some examples of HTML events:

                              An HTML web page has finished loading
                              An HTML input field was changed
                              An HTML button was clicked
                                onchange-	An HTML element has been changed
                                onclick	-The user clicks an HTML element

                          b) Event binding using $event-
                          $event is used in function argument
                          -(event-name)="function-name($event) (html)
                          -function-name(event) (ts)

              2. Two way data binding--html to ts & ts to html

                     -ngModel   -[(ngModel)]="property-name"       ---------Creates a FormControl instance from a domain model and binds it to a form control element.
                         ngModel imports in app.module.ts  -FormsModule
                     -add this into input tag also put name attribute in it
                     -

20.    Router (class)
           A service that provides navigation among views and URL manipulation capabilities.

           -navigateByUrl()
           Navigates to a view using an absolute route path




18.  Directives -To manipulate DOM 

     1) Component Directives
     2) Structural Directives 

           *ngIf="condition"

           *ngFor="let var-name of array-name"

                  here we are using ngFor

19.ActivatedRoute
CLASS
FINAL
Provides access to information about a route associated with a component that is loaded in an outlet. 
Use to traverse the RouterState tree and extract information from nodes.


   **> Parameters
   params: Observable<Params>	
An observable of the matrix parameters scoped to this route.

19.   Transforming Data Using Pipes
       ->Pipes are simple functions to use in template expressions 
         to accept an input value and return a transformed value.
        ->Angular provides built-in pipes for typical data transformations,
        eg:DatePipe - Formats a date value according to locale rules.
        UpperCasePipe	Transforms text to all upper case.
       
       

  **create a pipe - ng g p pipes/filter
